'''
题目描述
写出一个程序，接受一个十六进制的数，输出该数值的十进制表示。（多组同时输入 ）

输入描述:
输入一个十六进制的数值字符串。

输出描述:
输出该数值的十进制字符串。

示例1
输入
0xA
输出
10
'''

'''
无头绪 没看懂输入示例 0xA 的0x:
通常用的是十进制，也就是逢十进1，也就是可以用
0,1,2,3,4,5,6,7,8,9表示个位,当到十的时候就进了一位，变成了两位10
同理，八进制是逢八进1，也就是可以用
0,1,2,3,4,5,6,7表示个位，当到八的时候变成了两位10,我们在八进制数10前面加上0,八进制数10就变成了010了，010表示8，015表示1*8+5=13，那么再看一个数046表示多少呢？表示4*8+6=42
同理，十六进制是逢十六进1，也就是可以用
0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f表示个位，其中a,b,c,d,e,f分别表示十进制中的10,11,12,13,14,15，在十六进制小于十六的都是用一位来表示，当数等于16的时候就要进位了，变成了10，我们为了和十进制区别，在10前面加0x10,表示这个数是用16进制表示的，那么0x10由于是逢16进一，所以0x10表示的不是10，而是16，所以0x2a=2*16+a=2*16+10=42
'''

import sys

str_num_dic = {
    '0' : 0,
    '1' : 1,
    '2' : 2,
    '3' : 3,
    '4' : 4,
    '5' : 5,
    '6' : 6,
    '7' : 7,
    '8' : 8,
    '9' : 9,
    'A' : 10,
    'B' : 11,
    'C' : 12,
    'D' : 13,
    'E' : 14,
    'F' : 15,
}

while True:
    try:
        num_16 = sys.stdin.readline().strip() 
        # mark a mistake:num_16 = sys.stdin.readline().strip() 无法终止循环，why？ 因为仍然会录入'' 即空字符串，无法触发 
        # except；但本机试了sys.stdin.readline().strip()和input()均无法终止循环，只有在加上判断num_16 == '' 后才能正常退出
        # 而牛客oj在改为input()后没加判断就能ac了 ？奇怪
        ans = 0
        print(num_16)
        if num_16 == '':
            break
        for n in range(2, len(num_16)):
            ans = ans + str_num_dic[num_16[n]] * (16**(len(num_16)-n-1))
        print(ans)
    except:
        break

'''
ref1:
map_dict = {
    '0' : 0,
    '1' : 1,
    '2' : 2,
    '3' : 3,
    '4' : 4,
    '5' : 5,
    '6' : 6,
    '7' : 7,
    '8' : 8,
    '9' : 9,
    'A' : 10,
    'B' : 11,
    'C' : 12,
    'D' : 13,
    'E' : 14,
    'F' : 15,
}
while True:
    try:
        x = input()
        length = len(x)
        result = 0
        for i in range(2, length):
            result = result * 16 + map_dict[x[i]]
        print(result)
    except:
        break

ref2:
while True:
    try:
        print(int(input(),16))
    except:
        break
'''